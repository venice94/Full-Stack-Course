\l
\dt
create table newtable
\dt
CREATE TABLE newtable (
userid integer primary key
phone_number interger unique not null
email_add varchar
);
create table my_users (
userid integer primary key
phone_number integer not null
email_add varchar);
create table my_users (
userid integer primary key
phone_number integer not null
email_add varchar);
create table my_users (
userid integer priamry key
;
);
create table my_users (
userid integer primary key.
0;
);
create table myusers (
userid integer primary key,
phone_number unique not null,
email_add varchar
);
create table myusers (
userid integer primary key,
phone_number integer unique not null,
email_add varchar
);
\dt
\d myusers
insert into myusers (userid, phone_number, email_add)
;
insert into myusers (userid, phone_number, email_add)
values (1,659990123,'abc@google.com')
;
\d myusers
select * from myusers
;
alter table myusers
add column gender varchar check(gender in ('M','F')
);
select * from myusers
;
update myusers
set gender='ABC' where userid=1;
update myusers
set gender='C' where userid=1;
update myusers
set gender='M' where userid=1;
select * from myusers
;
alter table myusers
add column username varchar unique not null
;
alter table myusers
add column username varchar unique;
update myusers set username='user 1' where userid = 1
;
alter table my users
set username not null;
alter table myusers
set username not null;
alter table myusers
set column username not null;
alter table myusers add constraint username not null;
alter table myusers add constraint myuser_username_not_null username not null
;
alter table myusers add constraint myuser_username_not_null not_null(username);
alter table myusers add constraint myuser_username_not_null notnull(username);
alter table myusers alter column username set not null
;
select * from myusers
;
\d myusers
update myusers set username='user 1' where userid = 1
;
\l
psql myfirstdb
;
psql myfirstdb sh_ubuntu
;
\q
\q
/dt
;
\dt
select * from order_tab;
\d order_tab
\q
\dt
select * from order_tab
;
\q
select * from order_tab
;
\q
select * from order_tab
;
\q
select * from order_tab;
\q
\q
\dt
\q
\password
\q
\dt
\q
\d person2
\d persons2
\q
\d person2
\d persons2
\q
INSERT INTO persons (name) VALUES ('Amy');
\d persons2
SELECT * FROM persons
;
INSERT INTO persons (name) VALUES ('Bob');
INSERT INTO persons (name) VALUES ('Cash');
SELECT * FROM persons
;
\q
select * from myusers
;
\dt
select * from persons;
\q
select * FROM persons;
\q
\q
select * from person3;
select * from persons3;
\q
select * from persons3;
\q
select * from persons4;
\q
select * from persons4;
\q
\l
\q
\d To_Do_Item
\d To_Do_Items
\dt
\d persons
\d To_Do_Items
\d 'To_Do_Items'
\d To_Do_Item\
SELECT * FROM To_Do_Item
;
\q
\d
\d To_Do_Item
\d+ To_Do_Item
\d+ "To_Do_Item"
SELECT * FROM "To_Do_Item"
;
\q
\d
\d todolist
select * from todolist;
select * from neww_todo;
select * from newww_todo;
\d newww_todo
SELECT * FROM newww_todo WHERE title is null;
\
\q
\dt
\d newww_todo
\q
\d newww_todo
\q
\d newww_todo
\q
insert into newww_todo (title) values (todo1);
insert into newww_todo (title) values ('todo1');
insert into newww_todo (title) values ('todo2');
\d newww_todo
select * FROM newww_todo;
\q
select * from newww_todo
;
select * from newww_todo
;\q
SELECT * FROM newww_todo;
SELECT * FROM newww_todo;
\q
SELECT * FROM newww_todo;
\q
SELECT * FROM newww_todo;
SELECT * FROM newww_todo where completed=true;
\q
\d newww_todo
select * from newww_todo
;
\t
\dt
select * from todolists;
INSERT INTO todolists(name) VALUES ('General')
;
select * from todolists;
UPDATE newww_todo SET list_id=1;
select * from todolists;
select * from newww_todo
;
\q
select * from newww_todo;
\dt
\d newww_todo
\q
select * from todolist;
select * from todo_list;
select * from todolists;
\q
select * from todolists;
select * from newww_todo;
\q
select * from newww_todo;
select * from newww_todo where list_id=5;
\q
select * from newww_todo where list_id=5;
\q
select * from newww_todo;
delete from todolists where id=3
;
delete from newww_todo where list_id=3
;
delete from todolists where id=3
;
select * from newww_todo;
select * from todolists;
\q
\dt
\d Artist
select * from Artist;
select * from artist;
\t
\d Artist
\d Show
\d Venue
INSERT INTO Artist (name) VALUES(Guns N Petals)
;
INSERT INTO Artist (name) VALUES("Guns N Petals");
SHOW search_[ath
;
SHOW search_path
;
INSERT INTO "Artist" (name) VALUES("Guns N Petals");
\d "Artist"
\q
UPDATE "Artist" SET state='CA',phone='326-123-5000' WHERE name='Guns n Petals'
;
UPDATE "Artist" SET website='https://www.gunsnpetalsband.com' WHERE name='Guns n Petals';
\q
UPDATE "Artist" SET genres=['Jazz','Classical'],city='San Francisco', state='CA',phone='432-325-5432',image_link='https://images.unsplash.com/photo-1558369981-f9ca78462e61?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=794&q=80' WHERE name = 'The Wild Sax Band'
;
\q
\dt
\d Artist
\d "Artist"
\q
\d "Artist"
select * from "Artist"
;
\d "Venue"
select * from "Artist" where name='The Wild Sax Band'
;
UPDATE "Artist" SET city='California',state='CA',phone='123-456-000',genres=['Jazz','Classical'],image_link='https://images.unsplash.com/photo-1558369981-f9ca78462e61?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=794&q=80',seeking_venue='False',
;
UPDATE "Artist" SET city='California',state='CA',phone='123-456-000',genres=['Jazz','Classical'],image_link='https://images.unsplash.com/photo-1558369981-f9ca78462e61?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=794&q=80',seeking_venue='False' WHERE name = 'The Wild Sax Band';
\d "Artist
\d "Artist"
\q
INSERT INTO "Venue" (name,genres,address,city,state,phone) VALUES ('The Dueling Pianos Bar','{"Classical", "R&B", "Hip-Hop"}','335 Delancey Street','New York','NY','914-003-1132');
select genres from "Venue";
select id,genres from "Venue";
UPDATE "Venue" SET website='https://www.theduelingpianos.com' WHERE id=2
;
UPDATE "Venue" SET facebook_link='https://www.facebook.com/theduelingpianos',seeking_talent=False WHERE id=2;
UPDATE "Venue" SET image_link='https://images.unsplash.com/photo-1497032205916-ac775f0649ae?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80' WHERE id=2;
INSERT INTO "Vanue" (name, genres, address, city, state, phone, seeking_talent) VALUES ('Park Square Live Music & Coffee','{"Rock n Roll","Jazz","Classical","Folk"}','34 Whiskey Moore Ave','San Francisco','CA','415-000-1234',False);
INSERT INTO "Venue" (name, genres, address, city, state, phone, seeking_talent) VALUES ('Park Square Live Music & Coffee','{"Rock n Roll","Jazz","Classical","Folk"}','34 Whiskey Moore Ave','San Francisco','CA','415-000-1234',False);
UPDATE "Venue" SET website='https://www.parksquarelivemusicandcoffee.com',facebook_link='https://www.facebook.com/ParkSquareLiveMusicAndCoffee', image_link='https://images.unsplash.com/photo-1485686531765-ba63b07845a7?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=747&q=80' WHERE id=3
;
INSERT INTO "Show" (venue_id,artist_id,start_time) VALUES (1,1,2019-05-21T21:30:00.000Z);
INSERT INTO "Show" (venue_id,artist_id,start_time) VALUES (1,1,'2019-05-21T21:30:00.000Z');
select * from "Show";
INSERT INTO "Show" (venue_id,artist_id,start_time) VALUES (3,2,'2019-06-15T23:00:00.000Z');
INSERT INTO "Show" (venue_id,artist_id,start_time) VALUES (3,3,'2035-04-01T20:00:00.000Z');
INSERT INTO "Show" (venue_id,artist_id,start_time) VALUES (3,3,'2035-04-08T20:00:00.000Z');
INSERT INTO "Show" (venue_id,artist_id,start_time) VALUES (3,3,'2035-04-15T20:00:00.000Z');
select * from "Show";
\q
\d "Show"
\d "Artist"
\q
\dt
\d "Venue"
\d "Artist"
\d "Show"
\q
select * from "Venue";
\q
select id, name from "Venue";
\q
\s
\d
SELECT * FROM "Venue" JOIN "Show" ON "Venue".id="Show".venue_id
;
SELECT * FROM "Venue" JOIN "Show" ON "Venue".id="Show".venue_id GROUP BY city,state;
SELECT count("Show".id) FROM "Venue" JOIN "Show" ON "Venue".id="Show".venue_id GROUP BY city,state;
SELECT city,state,count("Show".id) FROM "Venue" JOIN "Show" ON "Venue".id="Show".venue_id GROUP BY city,state;
select * from "Show";
select * from "Venue";
\q
SELECT website from "Venues"
;
SELECT website from "Venue"
;
SELECT website from "Venue"
;
\q
select city, state from "Venue";
select name, city, state from "Venue";
\q
select id,name, city, state from "Venue";
\q
INSERT INTO "Show" (venue_id, artist_id, start_time) VALUES (1,2,"2229-05-21T21:30:00.000Z")
;
INSERT INTO "Show" (venue_id, artist_id, start_time) VALUES (1,2,'2022-05-21T21:30:00.000Z')
;
select * from "Show"
;
select * from "Show"
;
\q
update "Artist" set image_link='https://images.unsplash.com/photo-1495223153807-b916f75de8c5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=334&q=80' where artist_id=1
;
update "Artist" set image_link='https://images.unsplash.com/photo-1495223153807-b916f75de8c5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=334&q=80' where id=1
;
\q
select id,name from "Artist";
update "Artist" set image_link = 'https://images.unsplash.com/photo-1549213783-8284d0336c4f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=300&q=80' when id =1;
update "Artist" set image_link = 'https://images.unsplash.com/photo-1549213783-8284d0336c4f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=300&q=80' where id =1;
\q
select id, name from "Artist";
\q
select distinct(city,state) from "Venue";
\q
setup.sql
;
create user student
;
create sudo user student
;
\du
alter user student with superuser
;
\du
psql -u student
;
\q
\l
\i setup.sql
\l
\du
\q
\t
\dt
su - postgres bash -c "psql bookshelf < \\wsl$\Ubuntu-20.04\home\sh_ubuntu\git\Bookshelf\1_Requests_Starter\backend\books.psql"
;
su -postgres bash -c "psql bookshelf < \\wsl$\Ubuntu-20.04\home\sh_ubuntu\git\Bookshelf\1_Requests_Starter\backend\books.psql"
;
sudo - postgres bash -c "psql bookshelf < \\wsl$\Ubuntu-20.04\home\sh_ubuntu\git\Bookshelf\1_Requests_Starter\backend\books.psql"
;
su - postgres bash -c "psql bookshelf < //wsl$/Ubuntu-20.04/home/sh_ubuntu/git/Bookshelf/1_Requests_Starter/backend/books.psql"
;
psql -f books.psql
;
psql books < books.psql
;
\q
update "Artist" set created_date = now()
;
update "Venue" set created_date = now()
;
select id, name, created_date from "Artist";
select id, name, created_date from "Venue";
update "Venue" set created_date = '2010-04-22 12:22:11' where id = 1;
select id, name, created_date from "Venue";
update "Venue" set created_date = '2015-08-02 08:39:00.123456' where id = 2;
select id, name, created_date from "Venue";
update "Venue" set created_date = '2010-04-22 12:22:11.09887' where id = 1;
select id, name, created_date from "Venue";
\q
select id, name, created_date from "Venue";
update "Artist" set created_date = '2010-04-22 12:22:11.09887' where id = 1;
update "Artist" set created_date = '2011-03-22 12:22:11.09887' where id = 1;
update "Artist" set created_date = '2013-12-26 12:22:11.09887' where id = 2;
update "Artist" set created_date = '2013-12-26 19:22:11.09887' where id = 2;
update "Artist" set created_date = '2020-09-04 20:09:18.45326' where id = 3;
select id, name, created_date from "Artist";
\q
\q
select id, name, created_date from "Venue";
\q
\dt
\q
\dt
\q
select * from books;
\q
\d
select * from books;
\q
\d
\q
\d
select * from categories;
select * from questions;
select category from questions;
\t questions;
\t questions
\d questions
\q
\d category;
\d categories
select * from categories;
\d questions
\q
select * from question;
select * from questions;
select * from category;
select * from categories;
select id from Question;
\dt
select id from questions;
select id,category from questions;
select id,category from questions;\
\q
select * from questions
;
\q
select * from questions;
\q
\q
select id from questions;
\q
\q
select id from questions;
\q
select id from questions;
\q
select id from questions;
\q
select id from questions;
\dt
\dt questions
\d questions
\d categories
select id from questions;
\q
\q
\d
\t
\dt
\q
\dt
INSERT INTO USER (name, created_date, status) VALUES ('Test User', \q
\dt
\dt user
\t user
\s user
